# This file contains all the supported global configurations for the yamato-ci templates repo
# This is required by all templates
# When using the template for setting up a yamato job, please include the following disclaimer:
#_________________________________________________
# If you make structural changes to this file, please consider making a PR to the templating repo!
# Please find the source file here: https://github.cds.internal.unity3d.com/unity/yamato-ci-templates/blob/master/.yamato/template-config.yml
# VERSION 1
#_________________________________________________

editors:
  # Add any versions or branches required for testing here
  # This needs to be an exhaustive list of all potential versions used by all template jobs
  # Make sure to include the very minimum explicit version that a package or project requires (eg. 2019.1.0f1)
  - version: 2019.2
  - version: 2019.3
  - version: trunk

platforms:
  # Exhaustive list of operating systems and editor components used by all jobs so the preparation jobs
  # can make sure all editors are cached on cheap vms before starting the heavy duty machines for running tests
  - os: macos
    components:
      - editor
      - linux
      - macos
      - windows
  - os: windows
    components:
      - editor
      - linux
      - macos
      - windows
  # TODO: Add back after unite when we have time to investigate the crashes
  # - os: linux
  #   components:
  #     - editor
  #     - linux
  #     - macos
  #     - windows

revision_updater:
  # Nightly jobs are generated that will check for new revisions of all editors and branches specified above
  # So here you configure what your mainline branch is that this will trigger on and which channels
  # and/or people to notify of any updates or failures for these jobs
  notifications:
    success:
      - "#warlock-test-channel"
    failure:
      - "#warlock-test-channel"
  # The mainline/integration branch of the repo
  branch: master
  # The frequency at which the revision update notification job should run. Options are daily/weekly or leave it empty for nothing
  # If you want a job that for example commits the updated file directly then you should leave this blank and create your own
  # set of jobs that do that and set it to have a dependency on revision:updater
  scheduling: daily
  
testables:
  # Add any package and/or project folders here - upm ci will automatically grab both packages referenced in the project
  - name: project
    path: .
    type: project
    publish_source: true
    standalone: false